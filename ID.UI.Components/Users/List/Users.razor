@inherits UsersComponent

<ServerLoading Show="OverlayEnabled" />

<MudStack Justify="@(SelectedUsers.Count == 0 ? Justify.FlexEnd : Justify.SpaceBetween)" Row="true" Class="mb-3">
    @if (SelectedUsers.Count != 0)
    {
        <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Create"
                   Style="width: 200px; height: 60px;" Color="Color.Error" OnClick="DeleteSelectedUsersAsync">
            Удалить
        </MudButton>
    }

    <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Create"
               Style="width: 200px; max-height: 100px;" Color="Color.Primary" OnClick="ShowCreateUserDialogAsync">
        Зарегистрировать нового пользователя
    </MudButton>
</MudStack>

<MudTable @ref="UsersTable"
          Loading="OverlayEnabled"
          T="ID.UI.Core.Users.UserModel"
          Items="@Users"
          MultiSelection="true"
          @bind-SelectedItems="SelectedUsers"
          Hover="true" SelectOnRowClick="false">

    <HeaderContent>
        <MudTh>Идентификатор</MudTh>
        <MudTh>Наименование</MudTh>
        <MudTh>Роли</MudTh>
    </HeaderContent>

    <NoRecordsContent>
        <MudText Typo="Typo.body1">Пока нет ниодной записи</MudText>
    </NoRecordsContent>

    <RowTemplate>
        <MudTd DataLabel="Идентификатор">@context.Id</MudTd>
            <MudTd DataLabel="Наименование">@context.Email</MudTd>
            <MudTd DataLabel="Роли">@string.Join(',', context.Roles.Select(x => $" {x.RoleName}")).TrimEnd(',', ' ')</MudTd>
            <MudTd>
                <MudFab StartIcon="@Icons.Material.Filled.EditNote"
                        Size="Size.Medium"
                        Color="Color.Primary"
                        DisableElevation="true"
                        OnClick="() => ShowUpdateUserDialogAsync(context)" />
            </MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>